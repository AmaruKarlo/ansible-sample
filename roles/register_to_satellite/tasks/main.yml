---
# tasks file for register_to_satellite
- name: Check whether has been registered
  command: subscription-manager identity
  register: sub_mgr
  ignore_errors: true

#- debug: var="{{ sub_mgr }}"

- name: Download bootstrap.py from the {{ sat6_fqdn }}
  get_url:
    url: "http://{{ sat6_fqdn }}/pub/bootstrap.py"
    dest: /usr/local/sbin/bootstrap.py
  register: get_url_result
  until: get_url_result is succeeded
  retries: 10
  delay: 1
  ignore_errors: yes
  when: sub_mgr.rc == 1

- name: Copy bootstrap.py script to /usr/local/sbin and make it executable
  file:
    path: /usr/local/sbin/bootstrap.py
    mode: 0755
    owner: root
    group: root
  when: sub_mgr.rc == 1

- name: Register to Satellite6 with foreman and puppet *disabled*
  command: "/usr/local/sbin/bootstrap.py --skip puppet --skip foreman -l {{ admin_user}} -p {{ admin_pass }} -s {{ sat6_fqdn }} -o {{ org }} -L {{ loc }} -a {{ activationkey }}"
  when: sub_mgr.rc == 1

- name: Check for updates
  command: yum check-update
  register: update_out
  ignore_errors: yes
  
- name: Apply updates
  yum:
    name: '*'
    state: latest
  when: apply_updates and update_out.rc == 100

- name: Reboot
  shell: sleep 2 && shutdown -r now
  async: 1
  poll: 0
  ignore_errors: true
  when: apply_updates and update_out.rc == 100
  
- name: Wait for SSH to be up
  local_action: wait_for host={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} port=22 state=started delay=10
  become: no
  when: apply_updates and update_out.rc == 100
